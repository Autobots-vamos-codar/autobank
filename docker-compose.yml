# docker-compose up --force-recreate --build
version: "3.9"
services:
  anti-fraude:
    build: anti-fraude
    container_name: anti-fraude
    ports:
      - 3000:3000
    environment:
      CLIENTS_HOST: clientes
      TRANSACOES_HOST: transacoes
      MONGO_HOST: mongo-anti-fraude
      RABBIT_HOST: rabbitmq
    depends_on:
      - mongo-anti-fraude

  clientes:
    build: clientes
    container_name: clientes
    ports:
      - 3001:3001
    environment:
      MONGO_HOST: mongo-anti-fraude
    depends_on:
      - mongo-anti-fraude

  transacoes:
    build: transacoes
    container_name: transacoes
    ports:
      - 3002:3002
    environment:
      CLIENTS_HOST: clientes
      ANTI_FRAUDE_HOST: anti-fraude
      MONGO_HOST: mongo-anti-fraude
      MONGO_PORT: 27017
      RABBIT_HOST: rabbitmq
    depends_on:
      - mongo-anti-fraude

  mongo-anti-fraude:
    image: mongo
    container_name: mongo-anti-fraude
    volumes:
      - vol-mongo-anti-fraude:/data/db
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./dados:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=adm
      - RABBITMQ_DEFAULT_PASS=adm
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  api-gateway:
    image: nginx
    volumes:
      - ./servicos-nginx:/etc/nginx/conf.d
    restart: always
    ports:
      - 8080:80
    depends_on:
      - anti-fraude
      - clientes
      - transacoes

volumes:
  vol-mongo-anti-fraude:

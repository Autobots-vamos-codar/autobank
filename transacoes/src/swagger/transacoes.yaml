openapi: 3.0.3
info:
  title: Transações API
  description: |-
    API de transações
  version: 0.0.1
servers:
  - url: http://localhost:3002
tags:
  - name: transactions
    description: Rotas para manipular transações
paths:
  /api/admin/transactions:
    get:
      tags:
        - transactions
      summary: List transactions
      description: List all transactions
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
    post:
      tags:
        - transactions
      summary: Add transaction
      description: Add new transaction
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionPost"
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Transaction"
        '400':
          description: invalid data
        '401':
          description: unauthorized transaction 
        '500':
          description: server error, data not sent
        '404':
          description: customer not found
        '303':
          description: redirecting to transaction detail

  /api/admin/transactions/{id}:
    get:
      tags:
          - transactions
      summary: Find transaction
      description: Find one specific transaction
      parameters:
        - name: id
          in: path
          description: ID of transaction that needs to be fetched
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Transaction"
        '400':
          description: invalid ID supplied
        '404':
          description: not found
    put:
      tags:
        - transactions
      summary: Update transaction status
      description: Update transaction status by a new status on query
      parameters:
      - name: id
        in: path
        description: ID of account that needs to be updated
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: New status of the transaction
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ok
        '400':
          description: invalid id or status
        '401':
          description: unauthorized
  
  /api/admin/ping:
    get:
      tags:
          - transactions
      summary: Verify connection and token
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ok
        '401':
          description: Unauthorized
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
        nome_titular:
          type: string
        valor:
          type: number
          format: double
        status:
          type: string
        clientId:
          type: string
    TransactionPost:
      type: object
      properties:
        nome_titular:
          type: string
        valorTransacao:
          type: number
          format: double
        validade:
          type: string
        numero:
          type: string
        cvc:
          type: string